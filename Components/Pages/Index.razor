@page "/"
@inject DataService DataService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using booknote.Components.Models
@using booknote.Components.Services

<div class="book-container container-fluid">
    <div class="row">
        <div class="col left-page">
            <blockquote>
                "A room without books is like a body without a soul."
            </blockquote>
            <p class="quote-author">― Marcus Tullius Cicero</p>
            <blockquote>
                "So many books, so little time."
            </blockquote>
            <p class="quote-author">― Frank Zappa</p>
            <blockquote>
                "A reader lives a thousand lives before he dies. The man who never reads lives only one."
            </blockquote>
            <p class="quote-author">― George R.R. Martin, A Dance with Dragons</p>
            <blockquote>
                "I guess there are never enough books."
            </blockquote>
            <p class="quote-author">― John Steinbeck</p>
            <blockquote>
                "Books are the quietest and most constant of friends; they are the most accessible and wisest of counselors, and the most patient of teachers."
            </blockquote>
            <p class="quote-author">― Charles W. Eliot</p>
            
        </div>
        <div class="col right-page">
            <h3>Books List</h3>
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Author</th>
                            <th>Is Read?</th>
                            <th>Notes Count</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var book in BookList)
                        {
                            <tr>
                                <td><a @onclick="() => NavigateToNotes(book.Id)">@book.Title</a></td>
                                <td>@book.Author</td>
                                <td><input type="checkbox" @bind="book.IsRead" @bind:after="SaveChanges" /></td>
                                <td style="text-align: center">@book.Notes.Count</td>
                                <td>
                                    <button @onclick="() => EditBook(book.Id)">Edit</button>
                                    <button @onclick="() => ConfirmDelete(book.Id)">Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button href="addbook">
                    <NavLink class="nav-link" href="addbook">
                        Add New Book
                    </NavLink>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Book> BookList = new();


    protected override async Task OnInitializedAsync()
    {
        BookList = await DataService.GetBooksAsync();
    }


    private async Task SaveChanges()
    {
        await DataService.SaveBooksAsync(BookList);
    }

    private void NavigateToNotes(int bookId)
    {
        NavigationManager.NavigateTo($"/notes/{bookId}");
    }
    private void EditBook(int bookId)
    {
        NavigationManager.NavigateTo($"/addbook/{bookId}");
    }

    private async Task ConfirmDelete(int bookIdToDelete)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this book?");
        if (confirmed)
        {
            await DeleteBook(bookIdToDelete);
        }
    }

    private async Task DeleteBook(int bookIdToDelete)
    {
        await DataService.DeleteBookAsync(bookIdToDelete);
        BookList = await DataService.GetBooksAsync();
    }
}
